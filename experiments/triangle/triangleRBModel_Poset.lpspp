sort Enum6 = struct e5_6 | e4_6 | e3_6 | e2_6 | e1_6 | e0_6;
     Enum5 = struct e4_5 | e3_5 | e2_5 | e1_5 | e0_5;
     Enum8 = struct e7_8 | e6_8 | e5_8 | e4_8 | e3_8 | e2_8 | e1_8 | e0_8;
     Enum12 = struct e11_12 | e10_12 | e9_12 | e8_12 | e7_12 | e6_12 | e5_12 | e4_12 | e3_12 | e2_12 | e1_12 | e0_12;

map  C6_: Enum6 # Pos # Pos # Pos # Pos # Pos # Pos -> Pos;
     C6_1: Enum6 # Bool # Bool # Bool # Bool # Bool # Bool -> Bool;
     C5_: Enum5 # Pos # Pos # Pos # Pos # Pos -> Pos;
     C5_1: Enum5 # Bool # Bool # Bool # Bool # Bool -> Bool;
     C8_: Enum8 # Pos # Pos # Pos # Pos # Pos # Pos # Pos # Pos -> Pos;
     C8_1: Enum8 # Bool # Bool # Bool # Bool # Bool # Bool # Bool # Bool -> Bool;
     C12_: Enum12 # Pos # Pos # Pos # Pos # Pos # Pos # Pos # Pos # Pos # Pos # Pos # Pos -> Pos;
     C12_1: Enum12 # Bool # Bool # Bool # Bool # Bool # Bool # Bool # Bool # Bool # Bool # Bool # Bool -> Bool;

var  x1,y6,y5,y4,y3,y2,y1,x3,y17,y16,y15,y14,y13,x5,y30,y29,y28,y27,y26,y25,y24,y23,x7,y50,y49,y48,y47,y46,y45,y44,y43,y42,y41,y40,y39: Pos;
     e1,e2: Enum6;
     x2,y12,y11,y10,y9,y8,y7,x4,y22,y21,y20,y19,y18,x6,y38,y37,y36,y35,y34,y33,y32,y31,x8,y62,y61,y60,y59,y58,y57,y56,y55,y54,y53,y52,y51: Bool;
     e4,e5: Enum5;
     e7,e8: Enum8;
     e10,e11: Enum12;
eqn  C6_(e1, x1, x1, x1, x1, x1, x1)  =  x1;
     C6_(e5_6, y6, y5, y4, y3, y2, y1)  =  y6;
     C6_(e4_6, y6, y5, y4, y3, y2, y1)  =  y5;
     C6_(e3_6, y6, y5, y4, y3, y2, y1)  =  y4;
     C6_(e2_6, y6, y5, y4, y3, y2, y1)  =  y3;
     C6_(e1_6, y6, y5, y4, y3, y2, y1)  =  y2;
     C6_(e0_6, y6, y5, y4, y3, y2, y1)  =  y1;
     C6_1(e2, x2, x2, x2, x2, x2, x2)  =  x2;
     C6_1(e5_6, y12, y11, y10, y9, y8, y7)  =  y12;
     C6_1(e4_6, y12, y11, y10, y9, y8, y7)  =  y11;
     C6_1(e3_6, y12, y11, y10, y9, y8, y7)  =  y10;
     C6_1(e2_6, y12, y11, y10, y9, y8, y7)  =  y9;
     C6_1(e1_6, y12, y11, y10, y9, y8, y7)  =  y8;
     C6_1(e0_6, y12, y11, y10, y9, y8, y7)  =  y7;
     C5_(e4, x3, x3, x3, x3, x3)  =  x3;
     C5_(e4_5, y17, y16, y15, y14, y13)  =  y17;
     C5_(e3_5, y17, y16, y15, y14, y13)  =  y16;
     C5_(e2_5, y17, y16, y15, y14, y13)  =  y15;
     C5_(e1_5, y17, y16, y15, y14, y13)  =  y14;
     C5_(e0_5, y17, y16, y15, y14, y13)  =  y13;
     C5_1(e5, x4, x4, x4, x4, x4)  =  x4;
     C5_1(e4_5, y22, y21, y20, y19, y18)  =  y22;
     C5_1(e3_5, y22, y21, y20, y19, y18)  =  y21;
     C5_1(e2_5, y22, y21, y20, y19, y18)  =  y20;
     C5_1(e1_5, y22, y21, y20, y19, y18)  =  y19;
     C5_1(e0_5, y22, y21, y20, y19, y18)  =  y18;
     C8_(e7, x5, x5, x5, x5, x5, x5, x5, x5)  =  x5;
     C8_(e7_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y30;
     C8_(e6_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y29;
     C8_(e5_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y28;
     C8_(e4_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y27;
     C8_(e3_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y26;
     C8_(e2_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y25;
     C8_(e1_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y24;
     C8_(e0_8, y30, y29, y28, y27, y26, y25, y24, y23)  =  y23;
     C8_1(e8, x6, x6, x6, x6, x6, x6, x6, x6)  =  x6;
     C8_1(e7_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y38;
     C8_1(e6_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y37;
     C8_1(e5_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y36;
     C8_1(e4_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y35;
     C8_1(e3_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y34;
     C8_1(e2_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y33;
     C8_1(e1_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y32;
     C8_1(e0_8, y38, y37, y36, y35, y34, y33, y32, y31)  =  y31;
     C12_(e10, x7, x7, x7, x7, x7, x7, x7, x7, x7, x7, x7, x7)  =  x7;
     C12_(e11_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y50;
     C12_(e10_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y49;
     C12_(e9_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y48;
     C12_(e8_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y47;
     C12_(e7_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y46;
     C12_(e6_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y45;
     C12_(e5_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y44;
     C12_(e4_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y43;
     C12_(e3_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y42;
     C12_(e2_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y41;
     C12_(e1_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y40;
     C12_(e0_12, y50, y49, y48, y47, y46, y45, y44, y43, y42, y41, y40, y39)  =  y39;
     C12_1(e11, x8, x8, x8, x8, x8, x8, x8, x8, x8, x8, x8, x8)  =  x8;
     C12_1(e11_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y62;
     C12_1(e10_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y61;
     C12_1(e9_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y60;
     C12_1(e8_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y59;
     C12_1(e7_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y58;
     C12_1(e6_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y57;
     C12_1(e5_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y56;
     C12_1(e4_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y55;
     C12_1(e3_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y54;
     C12_1(e2_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y53;
     C12_1(e1_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y52;
     C12_1(e0_12, y62, y61, y60, y59, y58, y57, y56, y55, y54, y53, y52, y51)  =  y51;

act  ap_red,ap_blue,chg,dwn;

proc P(s1_t1_0: Pos) =
       sum e_t1_0: Enum6.
         (C6_1(e_t1_0, s1_t1_0 == 7, s1_t1_0 == 7, s1_t1_0 == 6, s1_t1_0 == 3, s1_t1_0 == 3, s1_t1_0 == 1)) ->
         dwn .
         P(s1_t1_0 = C6_(e_t1_0, 4, 5, 2, 7, 2, 2))
     + sum e3_t1_0: Enum5.
         (C5_1(e3_t1_0, s1_t1_0 == 6, s1_t1_0 == 5, s1_t1_0 == 4, s1_t1_0 == 3, s1_t1_0 == 1)) ->
         ap_blue .
         P(s1_t1_0 = C5_(e3_t1_0, 6, 5, 4, 3, 1))
     + sum e6_t1_0: Enum8.
         (C8_1(e6_t1_0, s1_t1_0 == 6, s1_t1_0 == 6, s1_t1_0 == 5, s1_t1_0 == 4, s1_t1_0 == 3, s1_t1_0 == 3, s1_t1_0 == 1, s1_t1_0 == 1)) ->
         tau .
         P(s1_t1_0 = C8_(e6_t1_0, 3, 4, 1, 6, 1, 6, 3, 5))
     + sum e9_t1_0: Enum12.
         (C12_1(e9_t1_0, s1_t1_0 == 7, s1_t1_0 == 7, s1_t1_0 == 7, s1_t1_0 == 6, s1_t1_0 == 5, s1_t1_0 == 4, s1_t1_0 == 3, s1_t1_0 == 3, s1_t1_0 == 2, s1_t1_0 == 2, s1_t1_0 == 2, s1_t1_0 == 1)) ->
         chg .
         P(s1_t1_0 = C12_(e9_t1_0, 3, 4, 5, 2, 7, 7, 2, 7, 3, 1, 6, 2))
     + sum e12_t1_0: Bool.
         (if(e12_t1_0, s1_t1_0 == 7, s1_t1_0 == 2)) ->
         ap_red .
         P(s1_t1_0 = if(e12_t1_0, 7, 2))
     + delta;

init P(5);
