load model = "polyInput_Poset.json"

// Define reach (rho) in terms of through (gamma)
let reach(x,y) = x | through(y,x)
                
// Surround in terms of reach (rho)
let sur(x,y)	= x & !reach(!(x | y), !y)
                
let green       = ap("G")
let white       = ap("W")
let corridor    = ap("corridor")

let greenOrWhite		= (green | white)
let oneStepToWhite   = eta((green | eta(corridor,white)),white)
let twoStepsToWhite  = eta((green | eta(corridor,oneStepToWhite)), oneStepToWhite) & (!oneStepToWhite)
let threeStepsToWhite = eta((green | eta(corridor,twoStepsToWhite)), twoStepsToWhite) & (!twoStepsToWhite) & (!oneStepToWhite)

let phi1 = eta((green | eta(corridor,white)),white)
let phi2 = eta((green | eta(corridor,oneStepToWhite)), oneStepToWhite)

save "G" green
save "W" white
save "corridor" corridor
save "phi1" phi1
save "phi2" phi2